// Expertises

// const testConst = "dog-";

// const testReg = RegExp("-");

// console.log(testReg.test(testConst));

// const expertiseGenerator = document.getElementById("expertise");

const expertiseAdj = [
  "Adaptive",
  "Aggressive",
  "Artificial",
  "Assembly",
  "Bespoke",
  "Biological",
  "Biotechnical",
  "Bulk",
  "Chemical",
  "Climate",
  "Clone",
  "Closed",
  "Construction",
  "Cortical",
  "Counter-",
  "Covert",
  "Cybernetic",
  "Data",
  "Deep-core",
  "Deep-space",
  "Defense",
  "Designer",
  "Digital",
  "Ecological",
  "Empathic",
  "Extruded",
  "Fluid",
  "Fractal",
  "Frictionless",
  "FTL",
  "Fungal",
  "Geo-industrial",
  "Geothermal",
  "Ghost",
  "High-energy",
  "Holo-",
  "Hypnotic",
  "Industrial",
  "Integrated",
  "Interlinked",
  "Laser",
  "Low-G",
  "Magnetic",
  "Matter",
  "Memory",
  "Meta-",
  "Micro-",
  "Multidimensional",
  "Necro-",
  "Orbital",
  "Organ",
  "Panoptical",
  "Parasite",
  "Planetary",
  "Powered",
  "Predatory",
  "Prescient",
  "Programmable",
  "Reflexive",
  "Regenerative",
  "Retroviral",
  "Self-aware",
  "Self-contained",
  "Self-evolving",
  "Smart",
  "Somnetic",
  "Spatial",
  "Stellar",
  "Super-massive",
  "Swarm",
  "Tectonic",
  "Temporary",
  "Wirehead",
  "Zero-G",
  "Zero-waste",
  "Weather",
  "Monomolecular",
  "Living",
];

const expertiseNoun = [
  "agriculture",
  "aircraft",
  "algorithms",
  "analysis",
  "archaeology",
  "architecture",
  "armaments",
  "armor",
  "artillery",
  "artistry",
  "augury",
  "automation",
  "banking",
  "bioweapons",
  "cartography",
  "circuitry",
  "computing",
  "coordination",
  "countermeasures",
  "cryptography",
  "cybernetics",
  "databanks",
  "drills",
  "economics",
  "ecosystems",
  "editing",
  "engineering",
  "engines",
  "exoskeletons",
  "factories",
  "fencing",
  "firewalls",
  "fog",
  "fracking",
  "gengineering",
  "gravitonics",
  "grids",
  "indoctrination",
  "infotransmission",
  "infrastructure",
  "languages",
  "life-forms",
  "logistics",
  "manufacturing",
  "mapping",
  "materials",
  "mathematics",
  "matter",
  "medicine",
  "miniaturization",
  "missiles",
  "mutagens",
  "navigation",
  "negotiations",
  "optimization",
  "personal combat",
  "politics",
  "power plants",
  "printing",
  "probes",
  "protocols",
  "robotics",
  "security",
  "shielding",
  "simulations",
  "starliners",
  "syncronization",
  "telemetry",
  "templates",
  "textiles",
  "theology",
  "training",
  "transference",
  "transportation",
  "vats",
  "control",
  "surgery",
  "power systems",
];

const environmentAdj = [
  "Abyssal",
  "Acid",
  "Airtight",
  "Ancient",
  "Ashen",
  "Azure",
  "Boiling",
  "Bomb-pocked",
  "Bone-ridden",
  "Boreal",
  "Bubbling",
  "Burnt-out",
  "Buzzing",
  "Cavernous",
  "Cherenkov",
  "Chlorine",
  "Cloud",
  "Cometological",
  "Corrosive",
  "Crimson-amber",
  "Crumbling",
  "Cryoclastic",
  "Cryofloral",
  "Crystal",
  "Diamond",
  "Drowned",
  "Explosive",
  "Fern",
  "Ferrous",
  "Fire",
  "Floating",
  "Flowering",
  "Foggy",
  "Fossil",
  "Frigid",
  "Frozen",
  "Fuming",
  "Fungal",
  "Glass",
  "Glowing",
  "High-rise",
  "Hydrocarbon",
  "Hydrochloric",
  "Hyperactive",
  "Hypersaline",
  "Icy",
  "Igneous",
  "Impassable",
  "Industrial",
  "Invasive",
  "Itinerant",
  "Lichen",
  "Lush",
  "Meandering",
  "Megafloral",
  "Mossy",
  "Noxious",
  "Obsidian",
  "Oceanic",
  "Orbital",
  "Organosilicate",
  "Pea-soup",
  "Perennial",
  "Perpetual",
  "Petrified",
  "Phosphorescent",
  "Poison",
  "Polar",
  "Purple",
  "Quicksand",
  "Quicksilver",
  "Radioactive",
  "Rotten",
  "Segmented",
  "Shifting",
  "Shimmering",
  "Silent",
  "Sky-scraping",
  "Smokestack",
  "Spore",
  "Stony",
  "Stormswept",
  "Submerged",
  "Subterranean",
  "Sulfurious",
  "Tempestuous",
  "Terrestrial",
  "Towering",
  "Toxic",
  "Ultraviolent",
  "Undersea",
  "Vast",
  "Volcanic",
  "Weathered",
];

const environmentNoun = [
  "algal mats",
  "arcologies",
  "atmosphere",
  "badlands",
  "barrens",
  "barrows",
  "basins",
  "biosphere",
  "blooms",
  "bogs",
  "canals",
  "canyons",
  "cenotes",
  "cloudbergs",
  "columns",
  "copses",
  "coral groves",
  "debris",
  "deserts",
  "domes",
  "dunelands",
  "fens",
  "fields",
  "floodplains",
  "flows",
  "foothills",
  "forests",
  "forestscapes",
  "fountains",
  "gasses",
  "glades",
  "glens",
  "grasslands",
  "hail",
  "highlands",
  "hypercanes",
  "icefields",
  "igneous plains",
  "jungles",
  "lagoons",
  "lakes",
  "landflows",
  "marshes",
  "meadows",
  "mega-cities",
  "miasma",
  "mirages",
  "mires",
  "monoliths",
  "moors",
  "mountlets",
  "nightscapes",
  "oases",
  "oceans",
  "outcroppings",
  "peaks",
  "pillars",
  "pits",
  "plains",
  "prairies",
  "rainforests",
  "ranges",
  "reefs",
  "ridges",
  "rivers",
  "ruins",
  "sandfields",
  "savannas",
  "scarlands",
  "scrublands",
  "seas",
  "sinkholes",
  "snowforests",
  "soil",
  "statuary",
  "steppelands",
  "sunlands",
  "swamps",
  "taiga",
  "tectonics",
  "terraces",
  "thickets",
  "thornlands",
  "thundersnow",
  "tidefalls",
  "timberlands",
  "tomb-mesas",
  "towers",
  "tsunamis",
  "tundra",
  "tunnels",
  "valleys",
  "vents",
  "waterspouts",
  "winters",
  "worselands",
  "wreckage",
];

const resourceAdj = [
  "algal",
  "alien",
  "aphrodisiacal",
  "arsenical",
  "atmospheric",
  "biological",
  "botanical",
  "carnivorous",
  "crawling",
  "cybernetic",
  "delicious",
  "domesticated",
  "electrified",
  "electrogenetic",
  "engineered",
  "envenomed",
  "epicontinental",
  "exofungal",
  "ferrocorrosive",
  "flammable",
  "floating",
  "fossil",
  "geothermal",
  "glowing",
  "gold-sifting",
  "gorgeous",
  "heavy metal",
  "hydrocarbon",
  "hydrochloric",
  "hyperactive",
  "hyperfertile",
  "lithotrophic",
  "living",
  "mellific",
  "metallic",
  "migratory",
  "nanosand",
  "narcotic",
  "nascent",
  "natural",
  "orbital",
  "organic",
  "paradisiacal",
  "prehuman",
  "radiotrophic",
  "resonating",
  "restorative",
  "sapient",
  "superconductive",
  "terraforming",
  "toxic",
  "trainable",
  "transcendental",
  "bioluminescent",
  "ancient",
  "autonomous",
  "diamond",
  "time-static",
  "self-replicating",
  "radioactive",
  "tele-empathic",
  "hemophagous",
  "machine-infested",
  "uplifted",
  "wetware",
  "vicious",
];

const resourceNoun = [
  "aeroplankton",
  "alloys",
  "ammunition dumps",
  "bioglass",
  "bioplastics",
  "biosphere",
  "boneyards",
  "boreholes",
  "circuitry",
  "coral reefs",
  "crystals",
  "dunes",
  "energy fields",
  "explosives",
  "extremophiles",
  "fauna",
  "flowers",
  "foundries",
  "fungus",
  "gardens",
  "gemstones",
  "gigantotherms",
  "hallucinogens",
  "ichthyoforms",
  "microbes",
  "minefields",
  "minerals",
  "mining sites",
  "moonlight",
  "motes",
  "mountains",
  "mushrooms",
  "nuclear reactors",
  "oceans",
  "ores",
  "pastures",
  "pestilences",
  "planetary consciousness",
  "residue",
  "rockworms",
  "sap",
  "scrapfields",
  "seas",
  "slime mold crops",
  "sludge",
  "snow",
  "space elevators",
  "spices",
  "springs",
  "stimulants",
  "symbionts",
  "wildlife",
  "wines",
  "petrochemicals",
  "warframes",
  "manufactories",
  "libraries",
  "ruins",
  "computers",
  "petrochemicals",
  "dust",
  "trees",
  "orchards",
  "hexapods",
  "robots",
  "ectotherms",
];

function randomNumber(number) {
  return Math.floor(Math.random() * number);
}

const expertNumber = 78;
const environmentNumber = 94;
const resourceNumber = 66;

function expertBuild() {
  adjNumber = randomNumber(expertNumber);
  adjType = expertiseAdj[adjNumber];
  adjCapitalize = adjType[0].toUpperCase() + adjType.slice(1);
  nounNumber = randomNumber(expertNumber);
  nounIsolate = expertiseNoun[nounNumber];
  nounCapitalize = nounIsolate[0].toLowerCase() + nounIsolate.slice(1);
  const adjReg = RegExp("-$");
  const nounReg = RegExp("-");
  if (adjReg.test(adjCapitalize) || nounReg.test(nounCapitalize) === true) {
    return adjCapitalize + nounCapitalize;
  } else if (
    adjReg.test(adjCapitalize) &&
    nounReg.test(nounCapitalize) === true
  ) {
    return adjCapitalize + nounCapitalize.slice(1);
  } else {
    return adjCapitalize + " " + nounCapitalize;
  }
}

function environmentBuild() {
  adjNumber = randomNumber(environmentNumber);
  adjType = environmentAdj[adjNumber];
  adjCapitalize = adjType[0].toUpperCase() + adjType.slice(1);
  nounNumber = randomNumber(environmentNumber);
  nounIsolate = environmentNoun[nounNumber];
  nounCapitalize = nounIsolate[0].toLowerCase() + nounIsolate.slice(1);
  const adjReg = RegExp("-$");
  const nounReg = RegExp("-");
  if (adjReg.test(adjCapitalize) || nounReg.test(nounCapitalize) === true) {
    return adjCapitalize + nounCapitalize;
  } else if (
    adjReg.test(adjCapitalize) &&
    nounReg.test(nounCapitalize) === true
  ) {
    return adjCapitalize + nounCapitalize.slice(1);
  } else {
    return adjCapitalize + " " + nounCapitalize;
  }
}

function resourceBuild() {
  adjNumber = randomNumber(resourceNumber);
  adjType = resourceAdj[adjNumber];
  adjCapitalize = adjType[0].toUpperCase() + adjType.slice(1);
  nounNumber = randomNumber(resourceNumber);
  nounIsolate = resourceNoun[nounNumber];
  nounCapitalize = nounIsolate[0].toLowerCase() + nounIsolate.slice(1);
  return adjCapitalize + " " + nounCapitalize;
}

console.log(expertBuild());
console.log(environmentBuild());
console.log(resourceBuild());
